{"ast":null,"code":"var _jsxFileName = \"/home/ckraczkowsky/github/anchorage-api/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar axios = require('axios');\n\nvar query = 'https://api.anchorage-development.com/v2/vaults/8fd09f37392e0faa77ab858af3ee350c/wallets';\nvar apiKey = 'faf601815e5f1c347b1ca98f4046965a9bff0302e311f2b048c2c98ffacd7947';\n\nfunction WalletList(props) {\n  const displayWallets = props => {\n    const {\n      wallets\n    } = props;\n\n    if (wallets.length > 0) {\n      return wallets.map(wallet => {\n        console.log(wallet);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_c = WalletList;\n;\nexport default function App() {\n  _s();\n\n  const [isLoading, setLoading] = useState(true);\n  const [wallets, setWallets] = useState();\n  useEffect(() => {\n    axios.get(query, {\n      headers: {\n        'Api-Access-Key': apiKey\n      }\n    }).then(res => {\n      setWallets(res.data.data);\n      setLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(WalletList, {\n    wallets: wallets\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n} // export default class App extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       loading: true,\n//       wallets: null\n//     };\n//   };\n//\n//   async componentDidMount(){\n//     const response = await axios.get(query, {\n//       headers: {\n//         'Api-Access-Key': apiKey\n//       }\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//     })\n//     var data = response.data.data;\n//     this.setState({wallets: data, loading: false});\n//   };\n//\n//   render(){\n//     const wallets = this.state.wallets.map((wallet) => {\n//       console.log(wallet.walletName)\n//     });\n//     return(\n//       <div>\n//         {\n//           this.state.loading ?\n//           ( <div>loading</div> ) :\n//           ( {wallets} )\n//         }\n//       </div>\n//     )\n//   }\n// }\n\n_s(App, \"OGLT8TcEinmnv+tbSOUaldKcOfM=\");\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WalletList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/ckraczkowsky/github/anchorage-api/src/App.js"],"names":["React","useState","useEffect","axios","require","query","apiKey","WalletList","props","displayWallets","wallets","length","map","wallet","console","log","App","isLoading","setLoading","setWallets","get","headers","then","res","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIC,KAAK,GAAG,0FAAZ;AACA,IAAIC,MAAM,GAAG,kEAAb;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAExB,QAAMC,cAAc,GAAID,KAAD,IAAW;AAChC,UAAM;AAACE,MAAAA;AAAD,QAAYF,KAAlB;;AACA,QAAIE,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAuB;AACrB,aACED,OAAO,CAACE,GAAR,CAAaC,MAAD,IAAY;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,OAFD,CADF;AAKD,KAND,MAMO;AACL,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;AACF,GAXD;;AAaA,sBACE,qCADF;AAGD;;KAlBQN,U;AAkBR;AAED,eAAe,SAASS,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BjB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUS,UAAV,IAAwBlB,QAAQ,EAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACiB,GAAN,CAAUf,KAAV,EAAiB;AACXgB,MAAAA,OAAO,EAAE;AACP,0BAAkBf;AADX;AADE,KAAjB,EAKKgB,IALL,CAKWC,GAAD,IAAS;AACbJ,MAAAA,UAAU,CAACI,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAV;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARL;AASD,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAID,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAAA;AAED,sBACE,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEP;AAArB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA5DwBM,G;;MAAAA,G","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nvar axios = require('axios');\n\nvar query = 'https://api.anchorage-development.com/v2/vaults/8fd09f37392e0faa77ab858af3ee350c/wallets';\nvar apiKey = 'faf601815e5f1c347b1ca98f4046965a9bff0302e311f2b048c2c98ffacd7947';\n\nfunction WalletList(props){\n\n  const displayWallets = (props) => {\n    const {wallets} = props;\n    if (wallets.length > 0){\n      return(\n        wallets.map((wallet) => {\n          console.log(wallet);\n        })\n      )\n    } else {\n      return (<div>loading</div>)\n    }\n  }\n\n  return(\n    <></>\n  )\n};\n\nexport default function App() {\n  const [isLoading, setLoading] = useState(true);\n  const [wallets, setWallets] = useState();\n\n  useEffect(() => {\n    axios.get(query, {\n          headers: {\n            'Api-Access-Key': apiKey\n          }\n        })\n        .then((res) => {\n          setWallets(res.data.data);\n          setLoading(false);\n        })\n  }, []);\n\n  if (isLoading) {\n    return <div>loading</div>\n  };\n\n  return (\n    <WalletList wallets={wallets} />\n  )\n}\n// export default class App extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       loading: true,\n//       wallets: null\n//     };\n//   };\n//\n//   async componentDidMount(){\n//     const response = await axios.get(query, {\n//       headers: {\n//         'Api-Access-Key': apiKey\n//       }\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//     })\n//     var data = response.data.data;\n//     this.setState({wallets: data, loading: false});\n//   };\n//\n//   render(){\n//     const wallets = this.state.wallets.map((wallet) => {\n//       console.log(wallet.walletName)\n//     });\n//     return(\n//       <div>\n//         {\n//           this.state.loading ?\n//           ( <div>loading</div> ) :\n//           ( {wallets} )\n//         }\n//       </div>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}